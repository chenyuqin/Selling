<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="selling.agent.withdraw">
    <resultMap id="withdrawVo" type="selling.sunshine.model.WithdrawRecord">
        <result property="withdrawId" column="withdraw_id"></result>
        <result property="openId" column="wechat"></result>
        <result property="wealth" column="current_coffer"></result>
        <result property="amount" column="withdraw_amount"></result>
        <result property="status" column="withdraw_status"
                typeHandler="selling.sunshine.handler.mybatis.withdraw.WithdrawStatusHandler"></result>
        <result property="blockFlag" column="block_flag"></result>
        <result property="createAt" column="create_time"></result>
        <association property="agent" column="agentId = agent_id" select="agentLiteQuery"></association>
    </resultMap>

    <resultMap id="agentLiteVo" type="selling.sunshine.model.lite.Agent">
        <result property="agentId" column="agent_id"></result>
        <result property="name" column="agent_name"></result>
        <result property="phone" column="agent_phone"></result>
    </resultMap>

    <resultMap id="statisticVo" type="java.util.Map">
        <result property="date" column="withdrawDate"></result>
        <result property="amount" column="amount"></result>
    </resultMap>

    <insert id="insert" parameterType="selling.sunshine.model.WithdrawRecord" useGeneratedKeys="false">
        INSERT INTO withdraw_record
        <set>
            <if test="withdrawId != null">
                withdraw_id = #{withdrawId},
            </if>
            <if test="openId != null">
                wechat = #{openId},
            </if>
            <if test="wealth != null">
                current_coffer = #{wealth},
            </if>
            <if test="amount != null">
                withdraw_amount = #{amount},
            </if>
            <if test="status != null">
                withdraw_status = #{status, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
            </if>
            <if test="agent != null and agent.agentId != null">
                agent_id = #{agent.agentId},
            </if>
            <if test="blockFlag != null">
                block_flag = #{blockFlag},
            </if>
            <if test="createAt != null">
                create_time = #{createAt}
            </if>
        </set>
    </insert>

    <update id="update" parameterType="selling.sunshine.model.WithdrawRecord">
        UPDATE withdraw_record
        set withdraw_status = #{status, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, block_flag = #{blockFlag}
        WHERE withdraw_id = #{withdrawId}
    </update>

    <select id="query" parameterType="java.util.Map" resultMap="withdrawVo">
        SELECT withdraw_id, wechat, current_coffer, withdraw_amount, withdraw_status, agent_id, block_flag, create_time
        FROM withdraw_record
        WHERE 1 = 1
        <if test="withdrawId != null">
            AND withdraw_id = #{withdrawId}
        </if>
        <if test="openId != null">
            AND wechat = #{openId}
        </if>
        <if test="status != null">
            AND withdraw_status IN (
            <foreach collection="status" item="item" index="index" separator=",">
                #{item}
            </foreach>)
        </if>
        <if test="blockFlag != null">
            AND block_flag = #{blockFlag}
        </if>
        <if test="agentId != null">
            AND agent_id = #{agentId}
        </if>
        <if test="rule != null">
            ORDER BY ${rule}
        </if>
        <if test="rule == null">
            ORDER BY create_time DESC
        </if>
    </select>

    <select id="agentLiteQuery" parameterType="java.util.Map" resultMap="agentLiteVo">
        SELECT agent_id, agent_name, agent_phone
        FROM agent
        WHERE agent_id = #{agentId}
    </select>

    <select id="statistic" parameterType="java.util.Map" resultMap="statisticVo">
      SELECT DATE_FORMAT(withdraw_record.create_time,'%Y-%m') AS withdrawDate,SUM(withdraw_amount) AS amount 
      FROM withdraw_record  
      WHERE DATE_FORMAT(withdraw_record.create_time,'%Y-%m')>DATE_FORMAT(date_sub(current_date(), interval 12 month),'%Y-%m') 
      AND withdraw_status=1
      AND agent_id = #{agentId}
      GROUP BY DATE_FORMAT(withdraw_record.create_time,'%Y-%m') 
      ORDER BY  DATE_FORMAT(withdraw_record.create_time,'%Y-%m')
    </select>

    <select id="money" parameterType="java.util.Map" resultType="java.lang.Double">
        SELECT sum(withdraw_amount)
        FROM withdraw_record
        WHERE 1 = 1
        <if test="check != null and check != ''">
            AND withdraw_status = 0 AND block_flag = TRUE
        </if>
        <if test="pay != null and pay != ''">
            AND withdraw_status = 0 and block_flag = FALSE
        </if>
    </select>
</mapper>