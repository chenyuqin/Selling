<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="selling.statistic">
    <resultMap id="sum4OrderVo" type="selling.sunshine.model.sum.Sum4Order">
        <result property="goodsId" column="goods_id"></result>
        <result property="goodsName" column="goods_name"></result>
        <result property="quantity" column="goods_quantity"></result>
        <result property="num" column="num"></result>
    </resultMap>
    
    <resultMap id="orderMonthVo" type="selling.sunshine.model.sum.OrderStatistics">
        <result property="agentName" column="agent_name"></result>
        <result property="payedQuantity" column="payedQuantity"></result>
        <result property="unPayedQuantity" column="unPayedQuantity"></result>
        <result property="finishedQuantity" column="finishedQuantity"></result>
        <result property="totalQuantity" column="totalQuantity"></result>
    </resultMap>
    
    <resultMap id="agentGoodsVo" type="selling.sunshine.model.sum.AgentGoods">
        <result property="agentName" column="agent_name"></result>
        <result property="goodsName" column="goods_name"></result>
        <result property="quantity" column="quantity"></result>
        <result property="price" column="price"></result>
    </resultMap>
    
    <resultMap id="orderMonthVO" type="selling.sunshine.model.sum.OrderMonth">
        <result property="quantity" column="quantity"></result>
        <result property="price" column="price"></result>
        <result property="totalQuantity" column="totalQuantity"></result>
        <result property="totalPrice" column="totalPrice"></result>
        <result property="num" column="num"></result>
        <result property="totalNum" column="totalNum"></result>
        <result property="payedMonth" column="payedMonth"></result>
        <result property="shippedMonth" column="shippedMonth"></result>
        <result property="giftMonth" column="giftMonth"></result>
    </resultMap>
    
    <resultMap id="statisticVo" type="java.util.Map">
        <result property="date" column="orderDate"></result>
        <result property="amount" column="num"></result>
    </resultMap>
    
   <resultMap id="topThreeAgentVo" type="selling.sunshine.model.sum.TopThreeAgent">
        <result property="agentName" column="agent_name"></result>
        <result property="quantity" column="quantity"></result>
    </resultMap>
    
    <resultMap id="purchaseRecordViewVo" type="selling.sunshine.model.sum.Vendition">
        <result property="goodsId" column="good_id"></result>
        <result property="goodsName" column="goods_name"></result>
        <result property="orderType" column="order_type"></result>
        <result property="goodsQuantity" column="goods_quantity"></result>
        <result property="recordPrice" column="record_price"></result>
    </resultMap>

    <select id="sum4order" resultMap="sum4OrderVo">
        select goods_id, goods_name, goods_quantity, sum(item_num) as num from (
            select goods.goods_id as goods_id, goods.goods_name as goods_name, goods_quantity, count(order_item_id) as item_num
            from order_item left join goods on order_item.goods_id = goods.goods_id
            where order_item_status = 1
            group by order_item.goods_id, goods_quantity
            union ALL
            select goods.goods_id as goods_id, goods.goods_name as goods_name, quantity as goods_quantity, count(order_id) as item_num
            from customer_order left join goods on customer_order.goods_id = goods.goods_id
            where order_status = 1
            group by customer_order.goods_id, quantity
            ) as item_sum
        group by goods_id, goods_name, goods_quantity
        order by goods_quantity ASC
    </select>
    

   
   <select id="sumOrderMonth" parameterType="java.util.Map" resultMap="orderMonthVo">
      select agent_name,payedQuantity,unPayedQuantity,finishedQuantity,totalQuantity from(select agent_id as id,sum(quantity) as payedQuantity from(
         select agent_id,sum(q1) as quantity from(
            select if(isnull(order_id),0,1) as q1,agent.agent_id from agent 
	        left join
            (select *from  customer_order  
               where order_status in(1,2)
               and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')) customerOrder
	        on  agent.agent_id = customerOrder.agent_id
         ) t1 group by agent_id
        union all
        select agent_id,sum(q2) as quantity from(
            select if(isnull(order_id),0,1)as q2, agent.agent_id from agent  
            left join 
               (select `order`.order_id,`order`.agent_id,order_item.order_item_id from `order`
                left join order_item
                on `order`.order_id = order_item.order_id 
		        where `order`.order_type=0 and `order`.order_status in(2,3,4) 
                and date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')) orderItem 
	        on agent.agent_id =orderItem.agent_id
        ) t2 group by agent_id
     )total1 group by id) payedTable,
     (select agent_id as id,sum(quantity) as unPayedQuantity from(
       select agent_id,sum(q1) as quantity from(
          select if(isnull(order_id),0,1) as q1,agent.agent_id from agent 
	      left join
             (select *from  customer_order  
              where order_status=0
              and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')) customerOrder
	          on  agent.agent_id = customerOrder.agent_id
             ) t1 group by agent_id
       union all
       select agent_id,sum(q2) as quantity from(
          select if(isnull(order_id),0,1)as q2, agent.agent_id from agent  
          left join 
             (select `order`.order_id,`order`.agent_id,order_item.order_item_id from `order`
                left join order_item on `order`.order_id = order_item.order_id 
		        where `order`.order_type=0 and `order`.order_status=1 
                and date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')) orderItem 
	      on agent.agent_id =orderItem.agent_id
       ) t2 group by agent_id
    )total2 group by id) unPayedTable,
    (select agent_id as id,sum(quantity) as finishedQuantity from(
       select agent_id,sum(q1) as quantity from(
           select if(isnull(order_id),0,1) as q1,agent.agent_id from agent 
	   left join
           (select *from  customer_order  
           where order_status=3
           and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')) customerOrder
	   on  agent.agent_id = customerOrder.agent_id
       ) t1 group by agent_id
       union all
       select agent_id,sum(q2) as quantity from(
          select if(isnull(order_id),0,1)as q2, agent.agent_id from agent  
          left join 
           (select `order`.order_id,`order`.agent_id,order_item.order_item_id from `order`
              left join order_item on `order`.order_id = order_item.order_id 
		      where `order`.order_type=0 and `order`.order_status=5 
              and date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')) orderItem 
	      on agent.agent_id =orderItem.agent_id
      ) t2 group by agent_id
   )total3 group by id) finishedTable,
   (select agent_id as id,sum(quantity) as totalQuantity from(
select agent_id,sum(q1) as quantity from(
   select if(isnull(order_id),0,1) as q1,agent.agent_id from agent 
	left join
         (select *from  customer_order  
           where order_status in (1,2,3)) customerOrder
	on  agent.agent_id = customerOrder.agent_id
) t1 group by agent_id
union all
select agent_id,sum(q2) as quantity from(
select if(isnull(order_id),0,1)as q2, agent.agent_id from agent  
     left join 
         (select `order`.order_id,`order`.agent_id,order_item.order_item_id from `order`
           left join order_item on `order`.order_id = order_item.order_id 
		   where `order`.order_type=0 and `order`.order_status in(2,3,4,5)) orderItem 
	 on agent.agent_id =orderItem.agent_id
) t2 group by agent_id
)total3 group by id) totalTable,agent 
where payedTable.id=unPayedTable.id and payedTable.id=finishedTable.id and payedTable.id=agent.agent_id and payedTable.id=totalTable.id
and agent.agent_granted=1 and agent.block_flag=0 <if test="search !=null and search != ''">AND agent.agent_name LIKE #{search}</if>
   </select>
   
  <select id="sumAgentGoodsMonth"  parameterType="java.util.Map" resultMap="agentGoodsVo">
  select * from(select agent_name,goods_name,quantity,price from(select agentId,goodsId, sum(quantity) as quantity ,sum(price) as price from(select `order`.agent_id as agentId,order_item.goods_id as goodsId,
       sum(order_item.goods_quantity) as quantity,sum(order_item.order_item_price) as price from `order`
	left join order_item
	on `order`.order_id = order_item.order_id 
	where `order`.order_type=0 and `order`.order_status in(2,3,4,5) 
	and date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')
    group by `order`.agent_id,order_item.goods_id
union all
select agent_id as agentId,goods_id as goodsId,
       sum(quantity) as quantity ,sum(total_price) as price from customer_order  
         where order_status in(1,2,3)
         and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')
         group by agent_id,goods_id) t1 group by agentId,goodsId) t2
left join agent on t2.agentId=agent.agent_id 
left join goods on t2.goodsId=goods.goods_id) t3 where agent_name is not null <if test="search !=null and search != ''">AND agent_name LIKE #{search}</if>
  </select>
  
<select id="sumAgentGoods"  parameterType="java.util.Map" resultMap="agentGoodsVo">
  select * from(select agent_name,goods_name,quantity,price from(select agentId,goodsId, sum(quantity) as quantity ,sum(price) as price from(select `order`.agent_id as agentId,order_item.goods_id as goodsId,
       sum(order_item.goods_quantity) as quantity,sum(order_item.order_item_price) as price from `order`
	left join order_item
	on `order`.order_id = order_item.order_id 
	where `order`.order_type=0 and `order`.order_status in(2,3,4,5) 
    group by `order`.agent_id,order_item.goods_id
union all
select agent_id as agentId,goods_id as goodsId,
       sum(quantity) as quantity ,sum(total_price) as price from customer_order  
         where order_status in(1,2,3)
         group by agent_id,goods_id) t1 group by agentId,goodsId) t2
left join agent on t2.agentId=agent.agent_id 
left join goods on t2.goodsId=goods.goods_id) t3 where agent_name is not null <if test="search !=null and search != ''"> AND agent_name LIKE #{search}</if>
  </select>
  
<select id="orderMonth" resultMap="orderMonthVO">
select *from(
select sum(quantity) as quantity,sum(price) as price from(
select sum(goods_quantity) as quantity,sum(order_item_price) as price from order_item 
       left join `order` on `order`.order_id=order_item.order_id 
        where order_item.order_item_status in(1,2,3)
		and date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')
        and `order`.order_type=0 
union all
select sum(quantity) as quantity,sum(total_price) as price from customer_order 
        where order_status in(1,2,3)
		and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')) t1) t3,
(        
select sum(quantity) as totalQuantity,sum(price) as totalPrice from(
select sum(goods_quantity) as quantity,sum(order_item_price) as price from order_item 
       left join `order` on `order`.order_id=order_item.order_id 
        where order_item.order_item_status in(1,2,3)
        and `order`.order_type=0 
union all
select sum(quantity) as quantity,sum(total_price) as price from customer_order 
        where order_status in(1,2,3)) t2) t4,
(select count(*) as totalNum from agent where agent_granted='1' and block_flag='0') t5,
(select count(*) as num from agent where agent_granted='1' and block_flag='0' 
                            and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')) t6,
(
select sum(payedMonth) as payedMonth from(
select count(*) as payedMonth from order_item 
       left join `order` on `order`.order_id=order_item.order_id 
        where `order`.order_status=2 
		and date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')
        and `order`.order_type=0 
union all
select count(*) as payedMonth from customer_order 
        where order_status=1
		and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')) t7) t9,
(
select sum(shippedMonth) as shippedMonth from(
select count(*) as shippedMonth from order_item 
       left join `order` on `order`.order_id=order_item.order_id 
        where `order`.order_status in(3,4,5)
		and date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')
        and `order`.order_type=0 
union all
select count(*) as shippedMonth from customer_order 
        where order_status in(2,3)
		and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')) t8) t10,
(
select count(*) as giftMonth from order_item 
       left join `order` on `order`.order_id=order_item.order_id 
       where date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')
	   and `order`.order_type=1) t11;
</select>

<select id="orderByYear" parameterType="java.util.Map" resultMap="statisticVo">
select orderDate, sum(num) as num from(
select *from(
select DATE_FORMAT(`order`.create_time,'%Y-%m') as orderDate,count(*) as num from `order`,order_item where `order`.order_id=order_item.order_id 
	   and date_format(`order`.create_time,'%Y')=#{year}
	   and `order`.order_status in (2,3,4,5)
       GROUP BY DATE_FORMAT(`order`.create_time,'%Y-%m') 
       ORDER BY  DATE_FORMAT(`order`.create_time,'%Y-%m')) t1
union all
select * from(
select DATE_FORMAT(create_time,'%Y-%m') as orderDate,count(*) as num from customer_order
	   where date_format(create_time,'%Y')=#{year}
	   and order_status in (1,2,3)
       GROUP BY DATE_FORMAT(create_time,'%Y-%m') 
       ORDER BY  DATE_FORMAT(create_time,'%Y-%m')) t2) t3 group by orderDate;
</select>

<select id="topThreeAgentMonth" resultMap="topThreeAgentVo">
select agent_name,quantity from(
select agent_id,sum(quantity) as quantity from(
select agent_id,sum(goods_quantity) as quantity from order_item 
       left join `order` on `order`.order_id=order_item.order_id 
        where order_item.order_item_status in(1,2,3)
		and date_format(`order`.create_time,'%Y-%m')=date_format(now(),'%Y-%m')
        and `order`.order_type=0 
        group by `order`.agent_id
union all
select agent_id,sum(quantity) as quantity from customer_order 
        where order_status in(1,2,3)
		and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')
        group by agent_id
) t1
        where agent_id is not null
        group by agent_id
        order by quantity desc) t2,agent where t2.agent_id=agent.agent_id;
        
</select>

<select id="topThreeAgent" resultMap="topThreeAgentVo">
select agent_name,quantity from(
select agent_id,sum(quantity) as quantity from(
select agent_id,sum(goods_quantity) as quantity from order_item 
       left join `order` on `order`.order_id=order_item.order_id 
        where order_item.order_item_status in(1,2,3)
        and `order`.order_type=0 
        group by `order`.agent_id
union all
select agent_id,sum(quantity) as quantity from customer_order 
        where order_status in(1,2,3)
        group by agent_id
) t1
        where agent_id is not null
        group by agent_id
        order by quantity desc) t2,agent where t2.agent_id=agent.agent_id;
        
</select>

<select id="purchaseRecordView" resultMap="purchaseRecordViewVo">
select goods_id, goods_name, order_type, sum(goods_quantity) as goods_quantity, sum(record_price) as record_price
from purchase_record_view
where 1 = 1
<if test="status != null and status != ''">
	and record_status in 
	<foreach collection="status" item="item" index="index" open="(" close=")" separator=",">
		#{item}
	</foreach>
</if>
<if test="type != null">
	and order_type = #{type}
</if>
<if test="monthly != null">
	and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')
</if>
group by goods_id, order_type order by goods_quantity desc;
        
</select>
   
   
</mapper>