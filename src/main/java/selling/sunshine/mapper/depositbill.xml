<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="selling.bill.deposit">
    <resultMap id="depositBillVo" type="common.sunshine.model.selling.bill.DepositBill">
        <result property="billId" column="bill_id"></result>
        <result property="billAmount" column="bill_amount"></result>
        <result property="channel" column="channel_name"></result>
        <result property="status" column="bill_status"
                typeHandler="selling.sunshine.handler.mybatis.bill.BillStatusHandler"></result>
        <result property="clientIp" column="client_ip"></result>
        <result property="blockFlag" column="block_flag"></result>
        <result property="createAt" column="create_time"></result>
        <association property="agent" column="agentId = agent_id" select="agentLiteQuery"></association>
    </resultMap>

    <resultMap id="agentLiteVo" type="common.sunshine.model.selling.agent.lite.Agent">
        <result property="agentId" column="agent_id"></result>
        <result property="name" column="agent_name"></result>
        <result property="phone" column="agent_phone"></result>
    </resultMap>

    <select id="agentLiteQuery" parameterType="java.util.Map" resultMap="agentLiteVo">
        SELECT agent_id, agent_name, agent_phone
        FROM agent
        WHERE agent_id = #{agentId}
    </select>

    <insert id="insert" parameterType="common.sunshine.model.selling.bill.DepositBill" useGeneratedKeys="false">
        INSERT INTO deposit_bill(bill_id, agent_id, channel_name, client_ip, bill_amount, bill_status, block_flag, create_time)
        VALUES (#{billId}, #{agent.agentId}, #{channel}, #{clientIp}, #{billAmount}, #{status, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, #{blockFlag}, #{createAt})
    </insert>

    <select id="query" parameterType="java.util.Map" resultMap="depositBillVo">
        SELECT bill_id, agent_id, channel_name, bill_amount, bill_status, client_ip, block_flag, create_time
        FROM deposit_bill
        WHERE 1 = 1
        <if test="billId != null and billId != ''">
            AND bill_id = #{billId}
        </if>
        <if test="agentId != null and agentId != ''">
            AND agent_id = #{agentId}
        </if>
        <if test="channel != null and channel != ''">
            AND channel_name = #{channel}
        </if>
        <if test="blockFlag != null and blockFlag !=''">
            AND block_flag = #{blockFlag}
        </if>
        <if test="status != null">
            AND bill_status = #{status}
        </if>
        <if test="statusList != null and statusList != ''">
            AND bill_status IN
            <foreach collection="statusList" item="mode" index="index" open="(" close=")" separator=",">
                #{mode}
            </foreach>
        </if>
        <if test="start != null and end != null and start != '' and end != ''">
            AND (date_format(create_time, '%Y-%m-%d') &gt;= #{start} AND date_format(create_time, '%Y-%m-%d') &lt;=
            #{end})
        </if>
        <if test="rule != null and rule != ''">
            ORDER BY ${rule}
        </if>
        <if test="rule == null">
            ORDER BY create_time ASC
        </if>
    </select>

    <update id="update" parameterType="common.sunshine.model.selling.bill.DepositBill" useGeneratedKeys="false">
        UPDATE deposit_bill
        <set>
            <if test="agent.agentId != null and agent.agentId != ''">
                agent_id = #{agent.agentId},
            </if>
            <if test="channel != null and channel != ''">
                channel_name = #{channel},
            </if>
            <if test="clientIp != null and clientIp != ''">
                client_ip = #{clientIp},
            </if>
            <if test="billAmount != null and billAmount != ''">
                bill_amount = #{billAmount},
            </if>
            <if test="status != null and status != ''">
                bill_status = #{status, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
            </if>
            bill_id = #{billId}
        </set>
        WHERE bill_id = #{billId}
    </update>
</mapper>