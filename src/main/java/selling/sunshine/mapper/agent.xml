<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="selling.agent">
    <resultMap id="agentVo" type="common.sunshine.model.selling.agent.Agent">
        <result property="agentId" column="agent_id"></result>
        <result property="coffer" column="agent_coffer"></result>
        <result property="name" column="agent_name"></result>
        <result property="gender" column="agent_gender"></result>
        <result property="phone" column="agent_phone"></result>
        <result property="address" column="agent_address"></result>
        <result property="card" column="agent_card"></result>
        <result property="wechat" column="agent_wechat"></result>
        <result property="password" column="agent_password"></result>
        <result property="granted" column="agent_granted"></result>
        <result property="blockFlag" column="block_flag"></result>
        <result property="createAt" column="create_time"></result>
        <result property="agentRefund" column="agent_refund"></result>
        <result property="claimScale" column="scale"></result>
    <!--     <result property="customerService" column="customer_service"></result> -->
        <result property="agentType" column="agent_type"
                typeHandler="common.sunshine.mybatis.handler.agent.AgentTypeHandler"></result>
        <association property="upperAgent" column="agentId = upper_agent_id" select="agentLiteQuery"></association>
    </resultMap>

    <resultMap id="agentLiteVo" type="common.sunshine.model.selling.agent.lite.Agent">
        <result property="agentId" column="agent_id"></result>
        <result property="name" column="agent_name"></result>
        <result property="phone" column="agent_phone"></result>
    </resultMap>

    <insert id="insert" parameterType="common.sunshine.model.selling.agent.Agent" useGeneratedKeys="false">
        INSERT INTO agent
        <set>
            <if test="upperAgent != null and upperAgent.agentId != null and upperAgent.agentId != ''">
                upper_agent_id = #{upperAgent.agentId},
            </if>
            agent_id = #{agentId},
            agent_name = #{name},
            agent_gender = #{gender},
            agent_phone = #{phone},
            agent_address = #{address},
            agent_card = #{card},
            agent_password = #{password},
            agent_wechat = #{wechat},
            agent_granted = #{granted},
            scale = #{claimScale},
            agent_refund = #{agentRefund},
            block_flag = #{blockFlag},
            create_time = #{createAt},
            agent_coffer = #{coffer},
<!--             customer_service=#{customerService}  --> 
            agent_type = #{agentType}
        </set>
    </insert>

    <select id="agentLiteQuery" parameterType="java.util.Map" resultMap="agentLiteVo">
        SELECT agent_id, agent_name, agent_phone
        FROM agent
        WHERE agent_id = #{agentId}
    </select>

    <select id="query" parameterType="java.util.Map" resultMap="agentVo">
        SELECT agent_id, upper_agent_id,agent_coffer, agent_name, agent_gender, agent_phone, agent_address, agent_card,
        agent_password,
        agent_wechat, agent_refund, agent_granted, block_flag, create_time, scale,agent_type
        FROM agent
        WHERE 1 = 1
        <if test="agentId != null and agentId != ''">
            AND agent_id = #{agentId}
        </if>
        <if test="agentType != null and agentType != ''">
            AND agent_type = #{agentType}
        </if>
        <if test="upperAgent != null and upperAgent.agentId != null">
            AND upper_agent_id = #{upperAgent.agentId}
        </if>
        <if test="upperAgentId != null and upperAgentId != ''">
            AND upper_agent_id = #{upperAgentId}
        </if>
        <if test="upperAgentIds != null and upperAgentIds != ''">
            AND upper_agent_id IN
            <foreach collection="upperAgentIds" index="index" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="name != null and name != ''">
            AND agent_name = #{name}
        </if>
        <if test="gender != null and gender != ''">
            AND agent_gender = #{gender}
        </if>
        <if test="phone != null and phone != ''">
            AND agent_phone = #{phone}
        </if>
        <if test="card != null and card != ''">
            AND agent_card = #{card}
        </if>
        <if test="agentRefund != null">
            AND agent_refund = #{agentRefund}
        </if>
        <if test="wechat != null and wechat != ''">
            AND agent_wechat = #{wechat}
        </if>
        <if test="granted != null">
            AND agent_granted = #{granted}
        </if>
        <if test="start != null and end != null and start != '' and end != ''">
            AND (date_format(create_time, '%Y-%m-%d') &gt;= #{start} AND date_format(create_time, '%Y-%m-%d') &lt;=
            #{end})
        </if>
        <if test="blockFlag != null">
            AND block_flag = #{blockFlag}
        </if>
        <if test="monthly != null">
            AND date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')
        </if>
        <if test="purchase != null">
            AND agent_id IN (
            SELECT agent_id FROM order_item_sum WHERE order_type IN (0, 2) AND
            date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m') AND agent_id IS NOT NULL)
        </if>
        <if test="search !=null and search != ''">
            AND (agent_name LIKE BINARY #{search} OR create_time LIKE BINARY #{search} OR agent_phone LIKE BINARY
            #{search})
        </if>
        <if test="rule != null and rule != ''">
            ORDER BY ${rule}
        </if>
        <if test="sortByName !=null and sortByName != ''">
                ORDER BY convert(agent_name using gbk)
        </if> 
        

    </select>

    <update id="update" parameterType="common.sunshine.model.selling.agent.Agent" useGeneratedKeys="false">
        UPDATE agent
        <set>
            <if test="gender != null and gender != ''">
                agent_gender = #{gender},
            </if>
            <if test="phone != null and phone != ''">
                agent_phone = #{phone},
            </if>
            <if test="password != null and password != ''">
                agent_password = #{password},
            </if>
            <if test="address != null and address != ''">
                agent_address = #{address},
            </if>
            <if test="card != null and card != ''">
                agent_card = #{card},
            </if>
            <if test="wechat != null and wechat != ''">
                agent_wechat = #{wechat},
            </if>
            <if test="granted != null">
                agent_granted = #{granted},
            </if>
            <if test="coffer != null and coffer != ''">
                agent_coffer = #{coffer},
            </if>
            <if test="agentRefund != null and agentRefund != ''">
                agent_refund = #{agentRefund},
            </if>
<!--             <if test="customerService != null and customerService != ''">
                customer_service = #{customerService},
            </if> -->
            <if test="claimScale != null and claimScale != ''">
                scale = #{claimScale},
            </if>
            <if test="blockFlag != null">
                block_flag = #{blockFlag},
            </if>
            <if test="upperAgent != null and upperAgent != ''">
                upper_agent_id = #{upperAgent.agentId},
            </if>
            <if test="agentType != null and agentType != ''">
                agent_type = #{agentType, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
            </if>
            agent_id = #{agentId}
        </set>
        WHERE agent_id = #{agentId}
    </update>

    <update id="updateCoffer" parameterType="common.sunshine.model.selling.agent.Agent" useGeneratedKeys="false">
        UPDATE agent
        <set>
            agent_coffer = #{coffer}
        </set>
        WHERE agent_id = #{agentId}
    </update>

    <update id="updateScale" parameterType="common.sunshine.model.selling.agent.Agent" useGeneratedKeys="false">
        UPDATE agent
        <set>
            scale = #{claimScale}
        </set>
        WHERE agent_id = #{agentId}
    </update>

    <update id="unbind">
        UPDATE agent
        <set>
            agent_wechat = NULL
        </set>
        WHERE agent_wechat = #{wechat}
    </update>
</mapper>