<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main" id-target="agent-management">
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <h1><i class="fa fa-home"></i> 下级代理商 </h1>
            <ol class="breadcrumb">
                <li><a href="${path.concat('/dashboard')}">首页</a></li>
                <li><a data-toggle="collapse" data-parent="#accordion" href="#agent-management">代理管理</a></li>
                <li class="active">下级代理商</li>
            </ol>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-lg-12">
           <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
           <div id="main" style="width: 600px;height:400px;"></div>
        </div>
    </div>
</div>
#parse("/backend/agent/component/agent_detail_modal.vm")
<div class="modal fade" id="dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
   <div class="modal-dialog">
      <div class="modal-content">
         <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">
               提示
            </h4>
         </div>
         <div class="modal-body">
              
         </div>
         <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-dismiss="modal">
               确定
            </button>
         </div>
</div>
</div>
<script>
     var agent;
     var agentList;
     var agentMap;
     $(document).ready(function () {
        $.post("${path.concat('/agent/subordinateData/')}${agentId}", function (result) {
             agent=result.data.agent;
             agentList=result.data.agentList;
             var height=100;
             var node={name: agent.name,x: 300,y: 300};
             var dataList=new Array();
             var linkList=new Array();
             dataList[0]=node;
             
             for(var i=0;i<agentList.length;i++){    
               var node1={name: agentList[i].name,x: 550,y: height};
               var node2={source: agent.name,target: agentList[i].name}
               dataList[i+1]=node1; 
               linkList[i]=node2;
               height+=200;  
             }
             agentMap=result.data.agentMap;
             var height2=100; 
             var length=agentList.length;
             for(var i=0;i<agentList.length;i++){   
                 var agentId= agentList[i].agentId; 
                 for(var j=0;j<agentMap[agentId].length;j++){
                     var node3={name: agentMap[agentId][j].name,x: 800,y: height2};
                     var node4={source: agentList[i].name,target: agentMap[agentId][j].name}
                     dataList[length+1]=node3;  
                     linkList[length]=node4;
                     height2+=100;
                     length++;
                 }
                 
             }
             
             	// 基于准备好的dom，初始化echarts实例
    var myChart = echarts.init(document.getElementById('main'));
    // 指定图表的配置项和数据
    option = {
        title: {
               text: '代理商'+agent.name+'的下级代理商'
        },

        animationDurationUpdate: 1500,
        animationEasingUpdate: 'quinticInOut',
        series : [
        {
            type: 'graph',
            layout: 'none',
            symbolSize: 50,
            roam: true,
            label: {
                normal: {
                    show: true
                }
            },
            edgeSymbol: ['circle', 'arrow'],
            edgeSymbolSize: [4, 10],
            edgeLabel: {
                normal: {
                    textStyle: {
                        fontSize: 20
                    }
                }
            },
            data: dataList,
            links: linkList,
            lineStyle: {
                normal: {
                    opacity: 0.9,
                    width: 2,
                    curveness: 0
                }
            }
        }
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);

       myChart.on('click', function (params) {  
           if(params.name.indexOf(">")<=0){       
               if(params.name==agent.name){
                  detail(agent.agentId);
               }else{
                   for(var i=0;i<agentList.length;i++){  
                      if(params.name==agentList[i].name){
                           detail(agentList[i].agentId);
                           break;
                      }else{
                         for(var j=0;i<agentMap[agentList[i].agentId].length;j++){                           
                                 if(params.name==agentMap[agentList[i].agentId][j].name){
                                      detail(agentMap[agentList[i].agentId][j].agentId);
                                      break;
                                 }                  
                         }
                      
                      }
                      
                   }
               }
               $("#agent_detail_modal").modal('show');    
          }
           
       });

       
    function detail(obj){
        $.post("${path.concat('/agent/detail/')}"+obj, function (result) {
           document.getElementById("agentAddress").innerHTML="居住地： "+result.data.agent.address;
           if(result.data.agent.wechat==null){
               document.getElementById("agentWechat").innerHTML="微信号： 尚未绑定";
           }else{
               document.getElementById("agentWechat").innerHTML="微信号： "+result.data.agent.wechat;
           }
           if(result.data.agent.upperAgent==null){
               document.getElementById("upperAgent").innerHTML="上级代理商： 无";
           }else{
               document.getElementById("upperAgent").innerHTML="上级代理商： "+result.data.agent.upperAgent.name;
           }
           document.getElementById("agentclaimScale").innerHTML="群规模： "+result.data.agent.claimScale+"人";
           document.getElementById("agentCoffer").innerHTML="账户余额： "+result.data.agent.coffer+"元";
           document.getElementById("agentRefund").innerHTML="累计返现金额： "+result.data.agent.agentRefund+"元";
           if((result.data.orderList == null) || (result.data.orderList == "")){
                 document.getElementById("orderList").innerHTML="最近三个月无订单";
           }else{
               var f = document.getElementById("orderList");            
               var childs = f.childNodes; 
               for(var i = childs.length - 1; i >= 0; i--) { 
                  f.removeChild(childs[i]); 
               }
               var node1="<table class='table table-striped'><tr><th>订单号</th><th>状态</th><th>日期</th><th>操作</th></tr>";
               for(var i=0;i<result.data.orderList.length;i++){
                   var order=result.data.orderList[i];
                   if(order.status=="PAYED"){
                        var status="已付款未发货";
                   }else if(order.status=="PATIAL_SHIPMENT"){
                        var status="部分发货";
                   }else if(order.status=="FULLY_SHIPMENT"){
                        var status="完全发货";
                   }else if(order.status=="SAVED"){
                        var status="已保存未支付";
                   }else if(order.status=="SUBMITTED"){
                        var status="已提交未支付";
                   }else{
                        var status="已结束";
                   }
                   var date=(new Date(order.createAt)).format("yyyy/MM/dd");
                   var node2="<tr><td>"+order.orderId+"</td><td>"+status+"</td><td>"+date+"</td><td><button type='button' class='btn btn-success' id='" + order.orderId + "'  onclick=orderItemDetail(this) data-toggle='modal' data-target='#order_item_modal'>详情</button></td></tr>";
                   node1+=node2;
              }
              node1+="</table>";
              $("#orderList").append(node1);
           }
           if(result.data.refundRecordList == ""){
                 document.getElementById("refundRecordList").innerHTML="当前无返现记录";
                 document.getElementById("refundRecordContainer").style.display="none";
           }else{
                var amount=0;
                var amount2=0;
                for(var i=0;i<result.data.refundRecordList.length;i++){
                      var refundRecord=result.data.refundRecordList[i];
                      amount+=refundRecord.refundAmount;
                      if(!refundRecord.blockFlag){
                           amount2+=refundRecord.refundAmount;
                      }
                }
                
                 document.getElementById("refundRecordList").innerHTML="累计返现金额："+amount+"元<br>本月预计返现金额："+amount2+"元";
                 document.getElementById("refundRecordContainer").style.display="block";
                 $.post("${path.concat('/refund/statistic/')}"+result.data.agent.agentId, function (result) {
                   $('#refundRecordContainer').highcharts({
                      title: {
                         text: '返现详细记录（过去一年内）',
                         x: -20 //center
                      },        
                      subtitle: {
                         text: '过去一年内总计返现'+result.totalAmount+'元',
                         x: -20
                      },
                      xAxis: {
                        categories: result.categories
                      },
                      yAxis: { 
                        title: {
                        text: '金额 (元)'
                        },
                        plotLines: [{
                          value: 0,
                          width: 1,
                          color: '#808080'
                        }]
                      },
                      tooltip: {
                          valueSuffix: '元'
                      },
                      legend: {
                         layout: 'vertical',
                         align: 'right',
                         verticalAlign: 'middle',
                         borderWidth: 0
                      },
                      series: [{
                         name: '返现金额',
                         data: result.data
                      }]
                  });
               });
           }
           if(result.data.withdrawRecordList == ""){
                 document.getElementById("withdrawRecordList").innerHTML="当前无提现记录";
                 document.getElementById("withdrawRecordContainer").style.display="none";
           }else{
               var amount=0;
               for(var i=0;i<result.data.withdrawRecordList.length;i++){
                   var withdrawRecord=result.data.withdrawRecordList[i];
                   amount+=withdrawRecord.amount;
               }
               document.getElementById("withdrawRecordList").innerHTML="总提现金额："+amount+"元";
               document.getElementById("withdrawRecordContainer").style.display="block";
               $.post("${path.concat('/withdraw/statistic/')}"+result.data.agent.agentId, function (result) {
                   $('#withdrawRecordContainer').highcharts({
                      title: {
                         text: '提现详细记录（过去一年内）',
                         x: -20 //center
                      },        
                      subtitle: {
                         text: '过去一年内总计提现'+result.totalAmount+'元',
                         x: -20
                      },
                      xAxis: {
                        categories: result.categories
                      },
                      yAxis: { 
                        title: {
                        text: '金额 (元)'
                        },
                        plotLines: [{
                          value: 0,
                          width: 1,
                          color: '#808080'
                        }]
                      },
                      tooltip: {
                          valueSuffix: '元'
                      },
                      legend: {
                         layout: 'vertical',
                         align: 'right',
                         verticalAlign: 'middle',
                         borderWidth: 0
                      },
                      series: [{
                         name: '提现金额',
                         data: result.data
                      }]
                  });
               });
           }
        });
    }
    
    function orderItemDetail(obj){
        $.post("${path.concat('/order/orderItem/')}"+obj.id, function (result) {

            document.getElementById("model_p").innerHTML="代理商："+result.data.order.agent.name;
            
            var f = document.getElementById("model_table");            
            var childs = f.childNodes; 
            for(var i = childs.length - 1; i >= 0; i--) { 
               f.removeChild(childs[i]); 
            }

            var node="<tr><th>客户</th><th>产品</th><th>数量</th><th>价格</th></tr>";
            for(var i=0;i<result.data.order.orderItems.length;i++){
               var orderItem=result.data.order.orderItems[i];
               node+="<tr><td>"+orderItem.customer.name+"</td><td>"+orderItem.goods.name+"</td><td>"+orderItem.goodsQuantity+"</td><td>"+orderItem.orderItemPrice+"</td>";
            }
            $("#model_table").append(node);
            document.getElementById("model_total").innerHTML="总计:&nbsp;"+result.data.totalPrices+"元";
            var node1="";
            for(var key in result.data.goods_quantity_Map){
                node1+="商品:&nbsp;"+key+"&nbsp;&nbsp;&nbsp;&nbsp;总共:&nbsp;"+result.data.goods_quantity_Map[key]+"件<br>"
            }
            document.getElementById("model_quantity").innerHTML=node1;
       });
    }
});
     
});
  
</script>

<style>
    #agent_detail_modal .modal-body{
       height:600px;     
       overflow:auto;
    } 
    #agent_detail_modal .modal-body #orderList{
       height:300px;     
       overflow:auto;
    }

</style>